sim-safe.c: In function ‘sim_main’:
sim-safe.c:452:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bogus opcode detected @ 0x%08p", regs.regs_PC);
  ^
In file included from sim-safe.c:157:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1928:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1936:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_R,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1949:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1958:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1974:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_SH(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_O_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1982:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_O,   0x04,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1995:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2004:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OL,  0x05,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2020:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_RU,  0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2041:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2050:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RUL,  0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2066:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_OU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2074:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_OU,  0x0c,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2087:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2096:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OUL,  0x0d,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2118:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2127:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RL,  0x01,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2146:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2155:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OL,  0x05,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2174:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2183:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RUL,  0x09,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2202:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2211:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OUL,  0x0d,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2233:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2242:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RL,  0x01,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2261:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2270:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OL,  0x05,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2289:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2298:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RUL,  0x09,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2317:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2326:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OUL,  0x0d,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2346:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2351:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PR,  0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2363:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2370:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2383:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRW,  0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2404:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2412:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRWL,  0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2423:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) - HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PO_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2428:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PO,  0x04,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2440:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2447:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POL,  0x05,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2460:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POW,  0x06,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2481:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2489:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POWL,  0x07,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2502:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2507:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRU,  0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2519:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2526:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUL,  0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2539:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2546:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRUW,  0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2560:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2568:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUWL,  0x0b,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2579:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) + HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POU,  0x0c,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2596:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2603:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUL,  0x0d,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:391:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-safe.c:391:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2616:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2623:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POUW,  0x0e,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2637:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2645:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUWL,  0x0f,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2662:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2669:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRL,  0x01,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2685:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2693:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRWL,  0x03,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2707:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2714:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POL,  0x05,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2730:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2738:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POWL,  0x07,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2752:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2759:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUL,  0x09,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2775:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2783:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUWL,  0x0b,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2797:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2804:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUL,  0x0d,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2820:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2828:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUWL,  0x0f,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2845:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2852:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRL,  0x01,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2868:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2876:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRWL,  0x03,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2890:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2897:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POL,  0x05,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2913:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2921:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POWL,  0x07,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2935:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2942:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUL,  0x09,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2958:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2966:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUWL,  0x0b,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2980:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2987:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUL,  0x0d,
 ^
sim-safe.c:380:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-safe.c:380:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:3003:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3011:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUWL,  0x0f,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3026:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3034:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3047:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3056:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_L,   0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3072:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3080:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_B,   0x04,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3093:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_BL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3102:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_BL,   0x05,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3118:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3126:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_U,   0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3139:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3148:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UL,   0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3164:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_UB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3172:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_UB,   0x0c,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3185:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3194:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UBL,  0x0d,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3212:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) - OFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_P,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3229:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3236:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PL,   0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3249:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3256:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PW,   0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3270:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3278:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PWL,  0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3289:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) - OFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3294:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PB,   0x04,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3306:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3313:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBL,  0x05,
 ^
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3326:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3333:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PBW,  0x06,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3347:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3355:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBWL,  0x07,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3366:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) + OFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3371:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PU,   0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3383:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUL,  0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3403:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3410:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUW,  0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3424:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3432:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUWL,  0x0b,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3443:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) + OFS, _fault); \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3448:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUB,  0x0c,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3460:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBL,  0x0d,
 ^
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3480:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3487:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUBW,  0x0e,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3501:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3509:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBWL,  0x0f,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3527:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3534:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_R,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3550:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3558:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RL,   0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3577:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RB,   0x04,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3600:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3608:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RBL,  0x05,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3627:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3634:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RU,   0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3647:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3656:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUL,  0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3675:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3682:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RUB,  0x0c,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3699:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3708:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUBL,  0x0d,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3732:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RP_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3737:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RP,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3755:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3762:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3779:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3786:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPW,  0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3804:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3812:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPWL,  0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3829:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3834:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPB,  0x04,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3852:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3859:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBL,  0x05,
 ^
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3876:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3883:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPBW,  0x06,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3901:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3909:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBWL,  0x07,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3926:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3931:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPU,  0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3949:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3956:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUL,  0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3973:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3980:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUW,  0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3998:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4006:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUWL,  0x0b,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4023:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUB,  0x0c,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4042:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4049:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBL,  0x0d,
 ^
sim-safe.c:389:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-safe.c:389:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4062:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4069:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUBW,  0x0e,
 ^
sim-safe.c:378:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-safe.c:378:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4083:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4091:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBWL,  0x0f,
 ^
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4113:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4141:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4150:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_L,   0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4170:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4182:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_W,   0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4204:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4213:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_WL,   0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4265:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4273:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_U,   0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4293:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4302:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UL,   0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4322:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4334:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_UW,   0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4356:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4365:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UWL,  0x0b,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4419:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4427:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_P,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4447:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4456:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PL,   0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4476:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4488:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PW,   0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4510:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4519:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PWL,         0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4546:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4554:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PU,   0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4574:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4583:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUL,         0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4603:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4615:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PUW,         0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4637:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4646:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUWL,  0x0b,
 ^
In file included from sim-safe.c:470:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5942:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5950:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_W,   0x00,
 ^
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5962:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5970:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_W,   0x01,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:5987:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_WL,  0x00,
 ^
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6009:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6018:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_WL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6035:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6043:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_W,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6073:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6082:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_WL,  0x00,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6110:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6118:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_UW,  0x00,
 ^
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6130:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6138:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_UW,  0x01,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6154:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6163:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_UWL,  0x00,
 ^
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6176:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6185:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_UWL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6201:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6209:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_UW,  0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6239:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6248:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_UWL,  0x00,
 ^
In file included from sim-safe.c:470:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:470:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6310:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6315:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_P,   0x00,
 ^
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6326:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6331:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_P,   0x01,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6346:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6353:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PL,  0x00,
 ^
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6365:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6372:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6388:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6395:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PW,  0x00,
 ^
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6408:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6415:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PW,  0x01,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6432:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6440:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PWL,  0x00,
 ^
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6454:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6462:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PWL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6477:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6482:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_P,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6511:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6518:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PL,  0x00,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6548:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6555:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PW,  0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6586:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6594:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PWL,  0x00,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6621:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6626:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PU,  0x00,
 ^
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6637:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6642:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PU,  0x01,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6657:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6664:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUL,  0x00,
 ^
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6676:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6683:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:393:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-safe.c:393:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6699:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6706:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PUW,  0x00,
 ^
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6719:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6726:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PUW,  0x01,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6743:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6751:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUWL,  0x00,
 ^
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6765:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6773:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUWL,  0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6787:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6792:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PU,  0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:382:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-safe.c:382:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6820:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6827:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUL,  0x00,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6857:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6864:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PUW,  0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6895:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6903:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUWL,  0x00,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6938:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6946:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_W,   0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6963:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6972:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_WL,   0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6988:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_UW,   0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7013:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7022:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_UWL,  0x0b,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7041:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7047:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_P,   0x00,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7064:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7071:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PL,   0x01,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7087:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7095:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PW,   0x02,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7112:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PWL,  0x03,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7137:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7143:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PU,   0x08,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7160:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7167:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUL,  0x09,
 ^
In file included from sim-safe.c:160:0:
sim-safe.c:396:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-safe.c:396:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7183:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7191:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PUW,  0x0a,
 ^
In file included from sim-safe.c:158:0:
sim-safe.c:385:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-safe.c:385:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7208:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-safe.c:462:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUWL,  0x0b,
 ^
sim-safe.c:472:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("attempted to execute a bogus opcode");
    ^
In file included from sim-safe.c:157:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-safe.c:476:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
  ^
In file included from sim-safe.c:157:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
main.c: In function ‘main’:
main.c:353:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("unable to redirect simulator output to file `%s'", sim_simout);
  ^
In file included from main.c:121:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
main.c:361:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("unable to redirect program output to file `%s'", sim_progout);
  ^
In file included from main.c:121:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
main.c:412:9: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
         fatal("could not renice simulator process");
         ^
In file included from main.c:121:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
syscall.c: In function ‘xlate_arg’:
syscall.c:627:3: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
   warn("could not translate argument for `%s': %d", name, target_val);
   ^
In file included from syscall.c:352:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
syscall.c: In function ‘sys_syscall’:
syscall.c:1091:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("non-anonymous MMAP's not yet implemented");
    ^
In file included from syscall.c:352:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
syscall.c:1111:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("out of memory in SYS_read");
    ^
In file included from syscall.c:352:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
syscall.c:1152:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("out of memory in SYS_write");
    ^
In file included from syscall.c:352:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
syscall.c:1393:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("syscall: open: cannot decode flags: 0x%08x", linux_flags);
    ^
In file included from syscall.c:352:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
syscall.c:1938:4: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
    warn("unsupported ioctl call: ioctl(%ld, ...)",
    ^
In file included from syscall.c:352:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
syscall.c:2109:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("syscall: setitimer ignored");
       ^
In file included from syscall.c:352:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
syscall.c:2605:6: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
      warn("partially supported sigprocmask() call...");
      ^
In file included from syscall.c:352:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
syscall.c:2671:6: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
      warn("partially supported sigaction() call...");
      ^
In file included from syscall.c:352:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
syscall.c:4211:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("invalid/unimplemented syscall %d, PC=0x%08p, winging it",
       ^
In file included from syscall.c:352:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
memory.c: In function ‘mem_create’:
memory.c:119:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from memory.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
memory.c: In function ‘mem_newpage’:
memory.c:168:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from memory.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
memory.c:173:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from memory.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
regs.c: In function ‘regs_create’:
regs.c:100:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from regs.c:86:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c: In function ‘ld_load_prog’:
loader.c:243:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad initial checkpoint in EIO file");
  ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:256:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("file `%s' does not appear to be a checkpoint file",
      ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:294:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("checkpoints only supported while EIO tracing");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:306:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot open executable `%s'", argv[0]);
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:309:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot read header from executable `%s'", argv[0]);
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:316:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("bad magic number in executable `%s' (not an executable)", argv[0]);
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:320:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("object file `%s' is not executable", argv[0]);
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:324:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("executable file `%s' is not for the ARM architecture", argv[0]);
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:328:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("number of sections in executable = %d\n", fhdr.e_shnum);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:329:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("offset to section header table = %d", fhdr.e_shoff);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:336:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("error reading string section header from `%s'", argv[0]);
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:339:10: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]
   strtab = (char *)calloc(shdr.sh_size, sizeof(char));
          ^
loader.c:341:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:345:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot seek to string table section");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:347:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot read string table section");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:349:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("size of string table = %d", shdr.sh_size);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:350:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("type of section = %d", shdr.sh_type);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:351:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("offset of string table in file = %d", shdr.sh_offset);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:353:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("processing %d sections in `%s'...", fhdr.e_shnum, argv[0]);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:361:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not reset location in executable");
  ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:363:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not read section %d from executable", i);
  ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:367:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("file is dynamically linked, compile with `-static'");
  ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:369:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("processing section `%s'...", &strtab[shdr.sh_name]);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:370:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section flags = 0x%08x", shdr.sh_flags); 
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:371:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section type = %d", shdr.sh_type);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:372:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section address = 0x%08x", shdr.sh_addr);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:373:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section offset = %d", shdr.sh_offset);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:374:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section size = %d", shdr.sh_size);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:375:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section link = %d", shdr.sh_link);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:376:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section extra info = %d", shdr.sh_info);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:377:7: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
       debug("  section entry size = %d", shdr.sh_entsize);
       ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:385:4: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
    debug("  processing section `%s'...", &strtab[shdr.sh_name]);
    ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:389:8: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
        debug("  loading section `%s'...", &strtab[shdr.sh_name]);
        ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:392:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("cannot file pointer");
   ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:395:15: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]
        buffer = (char *)calloc(shdr.sh_size, sizeof(byte_t));
               ^
loader.c:397:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("out of virtual memory");
   ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:401:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("could not read all the contents of section");
   ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:411:8: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
        debug("updating text size...");
        ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:419:8: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
        debug("updating data size...");
        ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:439:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("executable is missing a `.text' section");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:441:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("executable is missing a `.data' section");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:443:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("program entry point not specified");
     ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:538:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("environment overflow, increase MD_MAX_ENVIRON in arm.h");
       ^
In file included from loader.c:112:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
loader.c:550:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("ld_text_base: 0x%08x  ld_text_size: 0x%08x",
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:552:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("ld_data_base: 0x%08x  ld_data_size: 0x%08x",
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:554:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("ld_stack_base: 0x%08x  ld_stack_size: 0x%08x",
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:556:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("ld_prog_entry: 0x%08x", ld_prog_entry);
   ^
In file included from loader.c:112:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
loader.c:220:17: warning: unused variable ‘data_break’ [-Wunused-variable]
   md_addr_t sp, data_break = 0, null_ptr = 0, argv_addr, envp_addr;
                 ^
dlite.c: In function ‘ident_evaluator’:
dlite.c:313:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus stat class");
    ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘dlite_exec’:
dlite.c:695:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus argument type: `%c'", arg_type);
    ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘print_val’:
dlite.c:785:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("no default integer format");
  ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c:883:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("no default format");
     ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘print_help’:
dlite.c:990:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus argument type: `%c'", arg_type);
    ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘dlite_cont’:
dlite.c:1111:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("DLite is not configured");
     ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘dlite_dump’:
dlite.c:1553:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("no output lines");
     ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘bp_class_str’:
dlite.c:1731:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus access class");
     ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘set_break’:
dlite.c:1744:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from dlite.c:92:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
dlite.c: In function ‘__check_break’:
dlite.c:1899:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus range type");
    ^
In file included from dlite.c:92:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
symbol.c: In function ‘sym_bind_addr’:
symbol.c:587:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus symbol database");
       ^
In file included from symbol.c:85:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
symbol.c: In function ‘sym_bind_name’:
symbol.c:655:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus symbol database");
       ^
In file included from symbol.c:85:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
symbol.c: At top level:
symbol.c:117:12: warning: ‘syms_loaded’ defined but not used [-Wunused-variable]
 static int syms_loaded = FALSE;
            ^
symbol.c:212:1: warning: ‘acmp’ defined but not used [-Wunused-function]
 acmp(struct sym_sym_t **sym1, struct sym_sym_t **sym2)
 ^
symbol.c:219:1: warning: ‘ncmp’ defined but not used [-Wunused-function]
 ncmp(struct sym_sym_t **sym1, struct sym_sym_t **sym2)
 ^
eval.c: In function ‘result_type’:
eval.c:282:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("symbol used in expression");
     ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_double’:
eval.c:339:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:341:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_float’:
eval.c:377:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:379:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_qword’:
eval.c:405:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:407:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_sqword’:
eval.c:432:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:434:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_addr’:
eval.c:462:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:464:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_uint’:
eval.c:491:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:493:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_as_int’:
eval.c:520:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("symbol used in expression");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c:522:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("illegal arithmetic expression conversion");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘f_add’:
eval.c:579:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘f_sub’:
eval.c:634:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘f_mult’:
eval.c:689:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘f_div’:
eval.c:744:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘f_neg’:
eval.c:822:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘f_eq_zero’:
eval.c:867:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_new’:
eval.c:1111:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from eval.c:88:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eval.c: In function ‘eval_print’:
eval.c:1193:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus expression type");
       ^
In file included from eval.c:88:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_new’:
options.c:101:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘add_option’:
options.c:147:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("option `%s' must start with a `-'", opt->name);
     ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:154:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("option `%s' is multiply defined", opt->name);
  ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_int’:
options.c:178:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_int_list’:
options.c:216:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_uint’:
options.c:251:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_uint_list’:
options.c:289:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_float’:
options.c:324:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_float_list’:
options.c:362:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_double’:
options.c:397:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_double_list’:
options.c:435:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_enum’:
options.c:546:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:561:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not bind default value for option `%s'", name);
  ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_enum_list’:
options.c:599:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:614:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not bind default value for option `%s'", name);
  ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_flag’:
options.c:657:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_flag_list’:
options.c:698:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_string’:
options.c:736:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_string_list’:
options.c:774:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘process_option’:
options.c:816:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("option `%s' is undefined", argv[index]);
       ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:829:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("option `%s' requires an argument", opt->name);
    ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:837:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:854:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("could not parse argument `%s' of option `%s'",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:868:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("option `%s' requires an argument", opt->name);
    ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:876:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:892:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("could not parse argument `%s' of option `%s'",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:907:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("option `%s' requires an argument", opt->name);
    ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:915:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:932:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("could not parse argument `%s' of option `%s'",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:938:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("FP over/underflow for argument `%s' of option `%s'",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:954:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("option `%s' requires an argument", opt->name);
    ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:962:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:979:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("could not parse argument `%s' of option `%s'",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:993:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("option `%s' requires an argument", opt->name);
    ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1001:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1020:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("could not parse argument `%s' of option `%s'",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1044:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1079:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("option `%s' requires an argument", opt->name);
    ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1087:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("too many invocations of option `%s'", opt->name);
      ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1106:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus option class");
       ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘__opt_process_options’:
options.c:1138:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("orphan `%s' encountered during config file processing",
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1153:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("orphan argument `%s' was unclaimed", argv[index]);
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1174:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("option `-config' requires an argument");
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1189:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("option `-dumpconfig' requires an argument");
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘process_file’:
options.c:1235:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not open configuration file `%s'", fname);
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1238:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("can't get cwd");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1246:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("can't chdir to %s\n", fname);
  ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1293:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("can't chdir back to %s\n", cwd);
   ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1294:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("option line too complex in file `%s'", fname);
        ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1310:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("can't chdir back to %s\n", cwd);
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_print_option’:
options.c:1378:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("could not bind enum `%d' for option `%s'",
      ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1397:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("could not bind boolean `%d' for option `%s'",
      ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c:1432:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus option class");
       ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘print_help’:
options.c:1601:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus option class");
       ^
In file included from options.c:90:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘dump_config’:
options.c:1649:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not open file `%s'", fname);
  ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
options.c: In function ‘opt_reg_note’:
options.c:1707:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from options.c:90:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_eval_ident’:
stats.c:159:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("stat distributions not allowed in formula expressions");
       ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:178:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus stat class");
       ^
In file included from stats.c:91:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_new’:
stats.c:192:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_delete’:
stats.c:252:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus stat class");
    ^
In file included from stats.c:91:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_int’:
stats.c:295:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_uint’:
stats.c:326:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_qword’:
stats.c:358:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_sqword’:
stats.c:389:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_float’:
stats.c:421:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_double’:
stats.c:452:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_dist’:
stats.c:494:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:510:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_sdist’:
stats.c:544:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:557:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_add_samples’:
stats.c:594:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("hash table index overflow");
    ^
In file included from stats.c:91:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:609:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        fatal("out of virtual memory");
        ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:619:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("stat variable is not an array distribution");
       ^
In file included from stats.c:91:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_reg_formula’:
stats.c:649:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘print_dist’:
stats.c:793:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("distribution format not yet implemented");
       ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:684:33: warning: variable ‘imin’ set but not used [-Wunused-but-set-variable]
   unsigned int i, bcount, imax, imin;
                                 ^
stats.c:684:27: warning: variable ‘imax’ set but not used [-Wunused-but-set-variable]
   unsigned int i, bcount, imax, imin;
                           ^
stats.c: In function ‘print_sdist’:
stats.c:876:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("out of virtual memory");
  ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c:937:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("distribution format not yet implemented");
       ^
In file included from stats.c:91:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
stats.c: In function ‘stat_print_stat’:
stats.c:1025:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus stat class");
       ^
In file included from stats.c:91:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c: In function ‘eio_create’:
eio.c:139:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("unable to create EIO file `%s'", fname);
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c: In function ‘eio_open’:
eio.c:168:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("unable to open EIO file `%s'", fname);
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:181:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO file header");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:189:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO file `%s' has incompatible format", fname);
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:192:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO file `%s' has incompatible version", fname);
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:196:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("endian of `%s' does not match host", fname);
       ^
In file included from eio.c:93:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
eio.c:197:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("running with experimental cross-endian execution support");
       ^
In file included from eio.c:93:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
eio.c:198:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("****************************************");
       ^
In file included from eio.c:93:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
eio.c:199:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("**>> please check results carefully <<**");
       ^
In file included from eio.c:93:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
eio.c:200:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("****************************************");
       ^
In file included from eio.c:93:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
eio.c: In function ‘eio_read_chkpt’:
eio.c:352:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO file pointer");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:358:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   MD_EXO_TO_MISC_REGS(exo, sim_num_insn, regs);
   ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:365:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO integer regs");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:370:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not read EIO integer regs (too few)");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:373:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not read EIO integer regs (bad value)");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:379:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO integer regs (too many)");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:386:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO FP regs");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:391:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not read EIO FP regs (too few)");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:394:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not read EIO FP regs (bad value)");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:400:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO FP regs (too many)");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:414:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("could not read EIO memory page count");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:429:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("count not read EIO text segment specifiers");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:443:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("count not read EIO data segment specifiers");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:457:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("count not read EIO stack segment specifiers");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:477:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not read EIO memory page");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c: In function ‘my_mem_fn’:
eio.c:537:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("Read after Write in eio_syscall()");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:554:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus memory access command");
     ^
In file included from eio.c:93:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c: In function ‘eio_read_trace’:
eio.c:712:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot read EIO transaction");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:720:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO trace inconsistency: ICNT mismatch");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:724:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO trace inconsistency: PC mismatch");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:731:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("EIO trace inconsistency: missing input reg");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:734:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("EIO trace inconsistency: R[%d] input mismatch", i);
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:740:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO trace inconsistency: too many input regs");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:756:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("EIO trace inconsistency: bad memory transaction");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:766:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("EIO trace inconsistency: addr 0x%08p input mismatch", loc);
      ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:801:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO trace inconsistency: missing memory breakpoint");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:809:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("EIO trace inconsistency: missing output reg");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:818:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("EIO trace inconsistency: too many output regs");
     ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:834:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("EIO trace icnonsistency: bad memory transaction");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c: In function ‘eio_fast_forward’:
eio.c:864:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("could not fast forward to EIO checkpoint");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
eio.c:874:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot read EIO transaction (during fast forward)");
  ^
In file included from eio.c:93:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
range.c: In function ‘range_print_pos’:
range.c:172:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus execution position type");
       ^
In file included from range.c:86:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
range.c: In function ‘range_cmp_range’:
range.c:291:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("invalid range");
     ^
In file included from range.c:86:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
range.c: In function ‘range_cmp_range1’:
range.c:309:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("invalid range");
     ^
In file included from range.c:86:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
range.c:338:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus range type");
       ^
In file included from range.c:86:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
misc.c: In function ‘log_base2’:
misc.c:349:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("log2() only works for positive power of two values");
     ^
misc.c:156:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
misc.c: In function ‘myatosq’:
misc.c:841:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("strtoll() passed a NULL string");
     ^
misc.c:156:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
misc.c:860:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus base: %d", base);
     ^
misc.c:156:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
misc.c: In function ‘myatoq’:
misc.c:948:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("strtoll() passed a NULL string");
     ^
misc.c:156:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
misc.c:967:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus base: %d", base);
     ^
misc.c:156:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_reg_obj’:
machine.c:452:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus register bank");
       ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_print_creg’:
machine.c:524:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus control register index");
       ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_set_decoder’:
machine.c:585:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("MASK_MAX is too small, inst=`%s', index=%d",
       ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:588:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("doubly defined opcode, inst=`%s', index=%d",
       ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def: In function ‘md_init_decoder’:
machine.def:383:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ALUREG0_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:397:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ALUREG1_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:411:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ALUREG0a_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:672:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ALUREG1a_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:879:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(SWPMRS_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:926:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MSRTEQ_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:954:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MRSSWP_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1001:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MSRTST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1029:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ALUIMM0_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1282:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ALUIMM1_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1513:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MSRITEQI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1541:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MSRITSTI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1570:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MUL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:1919:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDRHSTRH_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:2106:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDRSBSTRSB_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:2221:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDRSHSTRSH_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:2336:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDRH_PSTRH_P_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:2651:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDRSB_PSTRSB_P_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:2834:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDRSH_PSTRSH_P_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:3017:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MEMIMMPOST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:3204:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MEMIMMPRE_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:3515:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MEMREGPOST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:3718:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MEMREGPRE_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4097:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(BLKPOST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4403:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(BLKPRE_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4660:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CPROC_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4665:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FPA_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4672:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CPRTCMF_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4681:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CPDO_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4716:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ADFMVF_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4723:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MUFMNF_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4730:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(SUFABS_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4737:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RSFRND_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4744:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(DVFSQT_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4751:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RDFLOG_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4758:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(POWLGN_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4765:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RPWEXP_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4772:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RMFSIN_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4779:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FMLCOS_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4786:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FDVTAN_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4793:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FRDASN_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4800:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(POLACS_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4807:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(UNDATN_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4812:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(UNDURD_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4817:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(UNDNRM_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4822:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ADFADFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4849:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MVFMVFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4876:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MUFMUFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4903:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(MNFMNFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4930:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(SUFSUFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4957:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ABSABSI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:4984:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RSFRSFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5011:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RNDRNDI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5040:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(DVFDVFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5067:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(SQTSQTI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5094:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RDFRDFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5121:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LOGLOGI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5148:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(POWPOWI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5175:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LGNLGNI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5202:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RPWRPWI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5229:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(EXPEXPI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5256:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(RMFRMFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5283:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(SINSINI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5310:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FMLFMLI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5337:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(COSCOSI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5364:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FDVFDVI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5391:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(TANTANI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5418:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(FRDFRDI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5445:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ASNASNI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5472:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(POLPOLI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5499:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ACSACSI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5526:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(ATNATNI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5553:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(URDURDI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5582:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(NRMNRMI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5613:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CPRT_CDP_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5620:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CDP_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5636:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CPRT_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5713:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CMF_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5724:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CMFCMFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5763:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CNFCNFI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5802:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CMFECMFEI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5847:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CNFECNFEI_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5892:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CDXPOST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5899:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(CDXPRE_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5906:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFSTFPOST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5933:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFS_WSTFD_W_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:5977:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFS_WLLDFD_WL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6025:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFE_WSTFP_W_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6062:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFE_WLLDFP_WL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6101:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFS_UWSTFD_UW_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6144:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFS_UWLLDFD_UWL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6191:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFE_UWSTFP_UW_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6228:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFE_UWLLDFP_UWL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6267:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFSTFPRE_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6302:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFS_PSTFD_P_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6337:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFS_PLLDFD_PL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6378:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFS_PWSTFD_PW_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6421:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFS_PWLLDFD_PWL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6468:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFE_PSTFP_P_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6501:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFE_PLLDFP_PL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6537:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFE_PWSTFP_PW_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6574:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFE_PWLLDFP_PWL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6613:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFS_PUSTFD_PU_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6648:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFS_PULLDFD_PUL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6689:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFS_PUWSTFD_PUW_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6732:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFS_PUWLLDFD_PUWL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6779:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFE_PUSTFP_PU_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6811:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFE_PULLDFP_PUL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6846:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(STFE_PUWSTFP_PUW_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6883:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LDFE_PUWLLDFP_PUWL_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:6921:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LFMSFMPOST_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
In file included from machine.c:617:0:
machine.def:7028:1: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
 CONNECT(LFMSFMPRE_LINK)
 ^
In file included from machine.c:170:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
machine.c:620:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("MASK_MAX is too small, index==%d", max_offset);
     ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_emit_ldst’:
machine.c:705:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus offset specifier");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:744:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus type specifier");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:751:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("post-update without writeback");
  ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:789:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus type specifier");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:808:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus offset specifier");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_get_flow’:
machine.c:2440:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("inst `%d' is not a CISC flow", (int)op);
       ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:2444:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("uop flow buffer overflow, increase MD_MAX_FLOWLEN");
     ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_cond_ok’:
machine.c:2600:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus predicate condition");
       ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_shiftrm’:
machine.c:2646:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus shift type");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:2675:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus shift type");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_shiftc’:
machine.c:2733:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus shift type");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c:2762:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus shift type");
    ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
machine.c: In function ‘md_print_ifmt’:
machine.c:2917:8: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
        panic("unknown disassembler escape code `%c'", *s);
        ^
In file included from machine.c:170:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
/bin/sh: line 1: ./sysprobe: No such file or directory
libexo.c: In function ‘intern_escape’:
libexo.c:134:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("\\x used with no trailing hex digits");
       ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:193:5: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
     warn("non-ANSI escape sequence `\\%c'", c);
     ^
In file included from libexo.c:84:0:
../misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
libexo.c:197:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("unknown escape, '\\' followed by char %x (`%c')", (int)c, c);
     ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘intern_char’:
libexo.c:214:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("mal-formed string constant");
     ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:220:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("mal-formed string constant");
  ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:234:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("character constant out of range");
     ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘intern_string’:
libexo.c:298:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("mal-formed string constant");
     ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:311:13: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
             warn("ANSI C forbids newline in character constant");
             ^
In file included from libexo.c:84:0:
../misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
libexo.c:314:13: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
             panic("encountered `\"' embedded in string constant");
             ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_intern’:
libexo.c:374:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_alloc’:
libexo.c:416:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_new’:
libexo.c:492:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("out of virtual memory");
    ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:499:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("array constructor overflow");
   ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:500:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        SET_EXO_ARR(exo, i, ent);
        ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:500:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
        SET_EXO_ARR(exo, i, ent);
        ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:537:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus EXO class");
       ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_delete’:
libexo.c:621:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus EXO class");
       ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_copy’:
libexo.c:690:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      SET_EXO_ARR(new_exo, i, EXO_ARR(exo, i));
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:690:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      SET_EXO_ARR(new_exo, i, EXO_ARR(exo, i));
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:690:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      SET_EXO_ARR(new_exo, i, EXO_ARR(exo, i));
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from libexo.c:86:0:
libexo.h:173:39: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    ? (fatal("not an array"), *(struct exo_term_t **)(NULL))  \
                                       ^
libexo.h:182:44: note: in definition of macro ‘SET_EXO_ARR’
       : (void)((E)->as_array.array[(N)] = (V))))
                                            ^
libexo.c:690:30: note: in expansion of macro ‘EXO_ARR’
      SET_EXO_ARR(new_exo, i, EXO_ARR(exo, i));
                              ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:701:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus EXO class");
       ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_deepcopy’:
libexo.c:756:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      SET_EXO_ARR(new_exo, i, exo_deepcopy(EXO_ARR(exo, i)));
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:756:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      SET_EXO_ARR(new_exo, i, exo_deepcopy(EXO_ARR(exo, i)));
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:756:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      SET_EXO_ARR(new_exo, i, exo_deepcopy(EXO_ARR(exo, i)));
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from libexo.c:86:0:
libexo.h:173:39: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    ? (fatal("not an array"), *(struct exo_term_t **)(NULL))  \
                                       ^
libexo.h:182:44: note: in definition of macro ‘SET_EXO_ARR’
       : (void)((E)->as_array.array[(N)] = (V))))
                                            ^
libexo.c:756:43: note: in expansion of macro ‘EXO_ARR’
      SET_EXO_ARR(new_exo, i, exo_deepcopy(EXO_ARR(exo, i)));
                                           ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:767:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus EXO class");
       ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_print’:
libexo.c:834:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      if (EXO_ARR(exo, last) != NULL)
      ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from libexo.c:86:0:
libexo.h:173:39: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    ? (fatal("not an array"), *(struct exo_term_t **)(NULL))  \
                                       ^
libexo.c:834:10: note: in expansion of macro ‘EXO_ARR’
      if (EXO_ARR(exo, last) != NULL)
          ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:879:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus EXO class");
       ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c: In function ‘exo_read’:
libexo.c:1096:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     SET_EXO_ARR(ent, cnt, elt);
     ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1096:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     SET_EXO_ARR(ent, cnt, elt);
     ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1137:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("bogus byte value");
    ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1215:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   SET_EXO_ARR(ent, cnt, NULL);
   ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1215:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   SET_EXO_ARR(ent, cnt, NULL);
   ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1220:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   SET_EXO_ARR(ent, cnt, elt);
   ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1220:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   SET_EXO_ARR(ent, cnt, elt);
   ^
In file included from libexo.c:84:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
libexo.c:1237:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus token");
       ^
In file included from libexo.c:84:0:
../misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
exolex.l: In function ‘yylex’:
exolex.l:132:8: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
 <INITIAL>"]"    { return ']'; }
        ^
In file included from exolex.l:68:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
exolex.l: In function ‘yy_setstream’:
exolex.l:204:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  {
     ^
In file included from exolex.l:68:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-uop.c: In function ‘sim_main’:
sim-uop.c:482:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("could not locate CISC flow");
   ^
In file included from sim-uop.c:166:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-uop.c:497:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("bogus opcode detected @ 0x%08p", regs.regs_PC);
  ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-uop.c:499:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("CISC opcode decoded");
  ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1928:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1936:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_R,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1949:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1958:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1974:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_SH(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_O_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1982:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_O,   0x04,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1995:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2004:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OL,  0x05,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2020:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_RU,  0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2041:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2050:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RUL,  0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2066:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_OU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2074:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_OU,  0x0c,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2087:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2096:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OUL,  0x0d,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2118:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2127:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RL,  0x01,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2146:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2155:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OL,  0x05,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2174:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2183:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RUL,  0x09,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2202:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2211:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OUL,  0x0d,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2233:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2242:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RL,  0x01,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2261:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2270:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OL,  0x05,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2289:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2298:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RUL,  0x09,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2317:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2326:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OUL,  0x0d,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2346:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2351:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PR,  0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2363:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2370:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2383:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRW,  0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2404:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2412:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRWL,  0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2423:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) - HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PO_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2428:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PO,  0x04,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2440:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2447:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POL,  0x05,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2460:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POW,  0x06,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2481:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2489:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POWL,  0x07,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2502:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2507:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRU,  0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2519:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2526:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUL,  0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2539:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2546:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRUW,  0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2560:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2568:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUWL,  0x0b,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2579:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) + HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POU,  0x0c,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2596:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2603:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUL,  0x0d,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2616:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2623:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POUW,  0x0e,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2637:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2645:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUWL,  0x0f,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2662:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2669:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRL,  0x01,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2685:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2693:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRWL,  0x03,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2707:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2714:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POL,  0x05,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2730:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2738:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POWL,  0x07,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2752:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2759:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUL,  0x09,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2775:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2783:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUWL,  0x0b,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2797:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2804:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUL,  0x0d,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2820:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2828:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUWL,  0x0f,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2845:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2852:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRL,  0x01,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2868:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2876:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRWL,  0x03,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2890:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2897:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POL,  0x05,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2913:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2921:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POWL,  0x07,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2935:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2942:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUL,  0x09,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2958:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2966:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUWL,  0x0b,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2980:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2987:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUL,  0x0d,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:3003:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3011:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUWL,  0x0f,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3026:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3034:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3047:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3056:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_L,   0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3072:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3080:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_B,   0x04,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3093:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_BL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3102:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_BL,   0x05,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3118:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3126:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_U,   0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3139:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3148:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UL,   0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3164:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_UB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3172:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_UB,   0x0c,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3185:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3194:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UBL,  0x0d,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3212:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) - OFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_P,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3229:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3236:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PL,   0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3249:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3256:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PW,   0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3270:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3278:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PWL,  0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3289:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) - OFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3294:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PB,   0x04,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3306:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3313:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBL,  0x05,
 ^
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3326:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3333:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PBW,  0x06,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3347:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3355:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBWL,  0x07,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3366:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) + OFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3371:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PU,   0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3383:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUL,  0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3403:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3410:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUW,  0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3424:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3432:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUWL,  0x0b,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3443:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) + OFS, _fault); \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3448:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUB,  0x0c,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3460:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBL,  0x0d,
 ^
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3480:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3487:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUBW,  0x0e,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3501:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3509:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBWL,  0x0f,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3527:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3534:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_R,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3550:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3558:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RL,   0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3577:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RB,   0x04,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3600:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3608:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RBL,  0x05,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3627:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3634:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RU,   0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3647:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3656:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUL,  0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3675:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3682:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RUB,  0x0c,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3699:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3708:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUBL,  0x0d,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3732:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RP_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3737:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RP,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3755:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3762:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3779:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3786:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPW,  0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3804:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3812:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPWL,  0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3829:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3834:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPB,  0x04,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3852:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3859:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBL,  0x05,
 ^
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3876:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3883:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPBW,  0x06,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3901:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3909:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBWL,  0x07,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3926:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3931:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPU,  0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3949:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3956:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUL,  0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3973:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3980:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUW,  0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3998:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4006:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUWL,  0x0b,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4023:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUB,  0x0c,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4042:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4049:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBL,  0x0d,
 ^
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4062:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4069:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUBW,  0x0e,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4083:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4091:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBWL,  0x0f,
 ^
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4113:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4141:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4150:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_L,   0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4170:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4182:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_W,   0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4204:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4213:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_WL,   0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4265:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4273:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_U,   0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4293:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4302:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UL,   0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4322:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4334:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_UW,   0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4356:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4365:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UWL,  0x0b,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4419:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4427:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_P,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4447:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4456:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PL,   0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4476:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4488:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PW,   0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4510:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4519:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PWL,         0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4546:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4554:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PU,   0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4574:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4583:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUL,         0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4603:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4615:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PUW,         0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4637:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4646:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUWL,  0x0b,
 ^
In file included from sim-uop.c:521:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5942:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5950:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_W,   0x00,
 ^
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5962:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5970:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_W,   0x01,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:5987:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_WL,  0x00,
 ^
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6009:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6018:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_WL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6035:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6043:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_W,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6073:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6082:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_WL,  0x00,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6110:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6118:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_UW,  0x00,
 ^
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6130:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6138:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_UW,  0x01,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6154:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6163:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_UWL,  0x00,
 ^
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6176:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6185:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_UWL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6201:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6209:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_UW,  0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6239:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6248:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_UWL,  0x00,
 ^
In file included from sim-uop.c:521:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:521:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6310:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6315:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_P,   0x00,
 ^
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6326:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6331:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_P,   0x01,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6346:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6353:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PL,  0x00,
 ^
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6365:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6372:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6388:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6395:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PW,  0x00,
 ^
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6408:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6415:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PW,  0x01,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6432:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6440:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PWL,  0x00,
 ^
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6454:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6462:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PWL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6477:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6482:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_P,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6511:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6518:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PL,  0x00,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6548:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6555:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PW,  0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6586:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6594:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PWL,  0x00,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6621:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6626:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PU,  0x00,
 ^
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6637:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6642:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PU,  0x01,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6657:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6664:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUL,  0x00,
 ^
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6676:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6683:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6699:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6706:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PUW,  0x00,
 ^
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6719:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6726:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PUW,  0x01,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6743:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6751:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUWL,  0x00,
 ^
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6765:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6773:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUWL,  0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6787:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6792:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PU,  0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6820:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6827:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUL,  0x00,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6857:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6864:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PUW,  0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6895:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6903:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUWL,  0x00,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6938:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6946:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_W,   0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6963:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6972:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_WL,   0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6988:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_UW,   0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7013:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7022:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_UWL,  0x0b,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7041:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7047:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_P,   0x00,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7064:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7071:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PL,   0x01,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7087:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7095:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PW,   0x02,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7112:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PWL,  0x03,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7137:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7143:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PU,   0x08,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7160:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7167:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUL,  0x09,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7183:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7191:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PUW,  0x0a,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7208:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:509:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUWL,  0x0b,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:407:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-uop.c:407:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:7283:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(URN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STP_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7288:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_B,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:7300:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7306:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_B,
 ^
sim-uop.c:396:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-uop.c:396:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:7318:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_SB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7324:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_SB,
 ^
sim-uop.c:409:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-uop.c:409:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:7335:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(URN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STP_H_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7340:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_H,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:7352:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_H_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7358:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_H,
 ^
sim-uop.c:398:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-uop.c:398:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:7370:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_SH_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7376:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_SH,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7387:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7392:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_W,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:7404:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7410:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_W,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:411:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-uop.c:411:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7421:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_S_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7426:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_S,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:400:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-uop.c:400:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:7438:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_S_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7444:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_S,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7455:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_D_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7460:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_D,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7472:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_D_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7478:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_D,
 ^
In file included from sim-uop.c:169:0:
sim-uop.c:414:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-uop.c:414:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7489:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_E_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7494:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_E,
 ^
In file included from sim-uop.c:167:0:
sim-uop.c:403:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-uop.c:403:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7506:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_E_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-uop.c:513:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7512:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_E,
 ^
sim-uop.c:523:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("attempted to execute a bogus opcode");
    ^
In file included from sim-uop.c:166:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-uop.c:527:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
  ^
In file included from sim-uop.c:166:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c: In function ‘bind_to_seg’:
sim-profile.c:303:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("cannot bind address to segment");
     ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c: In function ‘sim_reg_stats’:
sim-profile.c:505:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot locate any statistic named `%s'", pcstat_vars[i]);
  ^
In file included from sim-profile.c:94:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:509:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("`-pcstat' statistical variable `%s' is not an integral type",
  ^
In file included from sim-profile.c:94:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:514:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       pcstat_lastvals[i] = STATVAL(stat);
       ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c: In function ‘sim_main’:
sim-profile.c:771:9: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
         fatal("bogus opcode detected @ 0x%08p", regs.regs_PC);
         ^
In file included from sim-profile.c:94:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1928:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1936:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_R,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1949:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1958:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1974:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_SH(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_O_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1982:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_O,   0x04,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1995:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2004:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OL,  0x05,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2020:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_RU,  0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2041:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2050:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RUL,  0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2066:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_OU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2074:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_OU,  0x0c,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2087:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2096:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OUL,  0x0d,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2118:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2127:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RL,  0x01,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2146:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2155:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OL,  0x05,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2174:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2183:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RUL,  0x09,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2202:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2211:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OUL,  0x0d,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2233:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2242:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RL,  0x01,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2261:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2270:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OL,  0x05,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2289:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2298:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RUL,  0x09,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2317:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2326:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OUL,  0x0d,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2346:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2351:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PR,  0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2363:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2370:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2383:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRW,  0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2404:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2412:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRWL,  0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2423:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) - HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PO_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2428:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PO,  0x04,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2440:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2447:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POL,  0x05,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2460:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POW,  0x06,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2481:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2489:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POWL,  0x07,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2502:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2507:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRU,  0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2519:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2526:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUL,  0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2539:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2546:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRUW,  0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2560:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2568:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUWL,  0x0b,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2579:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) + HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POU,  0x0c,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2596:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2603:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUL,  0x0d,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:696:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-profile.c:696:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2616:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2623:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POUW,  0x0e,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2637:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2645:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUWL,  0x0f,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2662:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2669:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRL,  0x01,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2685:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2693:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRWL,  0x03,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2707:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2714:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POL,  0x05,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2730:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2738:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POWL,  0x07,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2752:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2759:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUL,  0x09,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2775:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2783:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUWL,  0x0b,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2797:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2804:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUL,  0x0d,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2820:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2828:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUWL,  0x0f,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2845:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2852:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRL,  0x01,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2868:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2876:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRWL,  0x03,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2890:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2897:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POL,  0x05,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2913:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2921:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POWL,  0x07,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2935:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2942:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUL,  0x09,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2958:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2966:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUWL,  0x0b,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2980:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2987:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUL,  0x0d,
 ^
sim-profile.c:685:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-profile.c:685:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:3003:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3011:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUWL,  0x0f,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3026:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3034:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3047:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3056:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_L,   0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3072:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3080:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_B,   0x04,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3093:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_BL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3102:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_BL,   0x05,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3118:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3126:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_U,   0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3139:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3148:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UL,   0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3164:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_UB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3172:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_UB,   0x0c,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3185:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3194:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UBL,  0x0d,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3212:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) - OFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_P,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3229:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3236:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PL,   0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3249:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3256:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PW,   0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3270:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3278:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PWL,  0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3289:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) - OFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3294:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PB,   0x04,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3306:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3313:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBL,  0x05,
 ^
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3326:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3333:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PBW,  0x06,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3347:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3355:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBWL,  0x07,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3366:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) + OFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3371:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PU,   0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3383:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUL,  0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3403:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3410:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUW,  0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3424:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3432:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUWL,  0x0b,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3443:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) + OFS, _fault); \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3448:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUB,  0x0c,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3460:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBL,  0x0d,
 ^
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3480:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3487:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUBW,  0x0e,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3501:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3509:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBWL,  0x0f,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3527:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3534:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_R,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3550:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3558:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RL,   0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3577:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RB,   0x04,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3600:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3608:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RBL,  0x05,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3627:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3634:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RU,   0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3647:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3656:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUL,  0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3675:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3682:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RUB,  0x0c,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3699:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3708:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUBL,  0x0d,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3732:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RP_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3737:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RP,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3755:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3762:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3779:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3786:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPW,  0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3804:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3812:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPWL,  0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3829:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3834:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPB,  0x04,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3852:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3859:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBL,  0x05,
 ^
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3876:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3883:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPBW,  0x06,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3901:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3909:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBWL,  0x07,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3926:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3931:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPU,  0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3949:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3956:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUL,  0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3973:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3980:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUW,  0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3998:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4006:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUWL,  0x0b,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4023:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUB,  0x0c,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4042:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4049:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBL,  0x0d,
 ^
sim-profile.c:694:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-profile.c:694:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4062:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4069:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUBW,  0x0e,
 ^
sim-profile.c:683:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-profile.c:683:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4083:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4091:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBWL,  0x0f,
 ^
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4113:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4141:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4150:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_L,   0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4170:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4182:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_W,   0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4204:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4213:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_WL,   0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4265:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4273:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_U,   0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4293:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4302:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UL,   0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4322:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4334:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_UW,   0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4356:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4365:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UWL,  0x0b,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4419:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4427:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_P,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4447:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4456:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PL,   0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4476:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4488:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PW,   0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4510:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4519:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PWL,         0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4546:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4554:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PU,   0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4574:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4583:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUL,         0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4603:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4615:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PUW,         0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4637:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4646:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUWL,  0x0b,
 ^
In file included from sim-profile.c:789:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5942:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5950:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_W,   0x00,
 ^
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5962:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5970:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_W,   0x01,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:5987:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_WL,  0x00,
 ^
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6009:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6018:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_WL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6035:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6043:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_W,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6073:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6082:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_WL,  0x00,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6110:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6118:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_UW,  0x00,
 ^
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6130:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6138:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_UW,  0x01,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6154:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6163:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_UWL,  0x00,
 ^
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6176:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6185:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_UWL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6201:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6209:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_UW,  0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6239:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6248:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_UWL,  0x00,
 ^
In file included from sim-profile.c:789:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:789:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6310:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6315:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_P,   0x00,
 ^
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6326:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6331:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_P,   0x01,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6346:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6353:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PL,  0x00,
 ^
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6365:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6372:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6388:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6395:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PW,  0x00,
 ^
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6408:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6415:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PW,  0x01,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6432:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6440:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PWL,  0x00,
 ^
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6454:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6462:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PWL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6477:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6482:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_P,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6511:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6518:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PL,  0x00,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6548:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6555:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PW,  0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6586:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6594:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PWL,  0x00,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6621:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6626:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PU,  0x00,
 ^
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6637:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6642:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PU,  0x01,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6657:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6664:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUL,  0x00,
 ^
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6676:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6683:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:698:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-profile.c:698:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6699:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6706:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PUW,  0x00,
 ^
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6719:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6726:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PUW,  0x01,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6743:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6751:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUWL,  0x00,
 ^
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6765:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6773:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUWL,  0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6787:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6792:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PU,  0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:687:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-profile.c:687:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6820:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6827:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUL,  0x00,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6857:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6864:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PUW,  0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6895:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6903:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUWL,  0x00,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6938:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6946:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_W,   0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6963:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6972:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_WL,   0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6988:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_UW,   0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7013:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7022:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_UWL,  0x0b,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7041:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7047:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_P,   0x00,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7064:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7071:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PL,   0x01,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7087:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7095:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PW,   0x02,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7112:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PWL,  0x03,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7137:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7143:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PU,   0x08,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7160:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7167:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUL,  0x09,
 ^
In file included from sim-profile.c:97:0:
sim-profile.c:701:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-profile.c:701:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7183:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7191:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PUW,  0x0a,
 ^
In file included from sim-profile.c:95:0:
sim-profile.c:690:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-profile.c:690:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7208:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-profile.c:781:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUWL,  0x0b,
 ^
sim-profile.c:791:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("attempted to execute a bogus opcode");
    ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:795:9: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
         fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
         ^
In file included from sim-profile.c:94:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:838:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("instruction has no class");
      ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:923:3: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   panic("bogus text symbol index");
   ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:942:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus data symbol index");
       ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c:963:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    newval = STATVAL(pcstat_stats[i]);
    ^
In file included from sim-profile.c:94:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-profile.c: At top level:
sim-profile.c:291:1: warning: ‘bind_to_seg’ defined but not used [-Wunused-function]
 bind_to_seg(md_addr_t addr)  /* address to bind to a segment */
 ^
sim-profile.c:709:21: warning: ‘fsm’ defined but not used [-Wunused-variable]
 static unsigned int fsm = 0;
                     ^
sim-cache.c: In function ‘sim_check_options’:
sim-cache.c:407:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 data cache must defined if the l2 cache is defined");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:414:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad l1 D-cache parms: <name>:<nsets>:<bsize>:<assoc>:<repl>");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:426:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("bad l2 D-cache parms: "
      ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:441:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 inst cache must defined if the l2 cache is defined");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:447:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("I-cache l1 cannot access D-cache l1 as it's undefined");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:452:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 inst cache must defined if the l2 cache is defined");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:458:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("I-cache l1 cannot access D-cache l2 as it's undefined");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:463:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 inst cache must defined if the l2 cache is defined");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:470:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad l1 I-cache parms: <name>:<nsets>:<bsize>:<assoc>:<repl>");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:481:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("I-cache l2 cannot access D-cache l2 as it's undefined");
      ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:488:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("bad l2 I-cache parms: "
      ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:503:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad TLB parms: <name>:<nsets>:<page_size>:<assoc>:<repl>");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:517:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad TLB parms: <name>:<nsets>:<page_size>:<assoc>:<repl>");
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c: In function ‘sim_reg_stats’:
sim-cache.c:625:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot locate any statistic named `%s'", pcstat_vars[i]);
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:629:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("`-pcstat' statistical variable `%s' is not an integral type",
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:634:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       pcstat_lastvals[i] = STATVAL(stat);
       ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c: In function ‘sim_main’:
sim-cache.c:912:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("could not locate CISC flow");
   ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:927:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("bogus opcode detected @ 0x%08p", regs.regs_PC);
  ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:929:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("CISC opcode decoded");
  ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cache.c:951:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:953:11: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
           panic("attempted to execute a bogus opcode");
           ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:957:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
  ^
In file included from sim-cache.c:118:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cache.c:976:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    newval = STATVAL(pcstat_stats[i]);
    ^
In file included from sim-cache.c:118:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c: In function ‘update_way_list’:
cache.c:303:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus WHERE designator");
     ^
In file included from cache.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c: In function ‘cache_create’:
cache.c:328:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache size (in sets) `%d' must be non-zero", nsets);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:330:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache size (in sets) `%d' is not a power of two", nsets);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:333:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache block size (in bytes) `%d' must be 8 or greater", bsize);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:335:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache block size (in bytes) `%d' must be a power of two", bsize);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:337:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("user data size (in bytes) `%d' must be a positive value", usize);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:339:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache associativity `%d' must be non-zero and positive", assoc);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:341:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache associativity `%d' must be a power of two", assoc);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:343:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("must specify miss/replacement functions");
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:349:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:375:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("%s: cp->hsize     = %d", cp->name, cp->hsize);
   ^
In file included from cache.c:104:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:376:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("%s: cp->blk_mask  = 0x%08x", cp->name, cp->blk_mask);
   ^
In file included from cache.c:104:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:377:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("%s: cp->set_shift = %d", cp->name, cp->set_shift);
   ^
In file included from cache.c:104:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:378:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("%s: cp->set_mask  = 0x%08x", cp->name, cp->set_mask);
   ^
In file included from cache.c:104:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:379:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("%s: cp->tag_shift = %d", cp->name, cp->tag_shift);
   ^
In file included from cache.c:104:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:380:3: warning: passing argument 2 of ‘_debug’ discards ‘const’ qualifier from pointer target type [enabled by default]
   debug("%s: cp->tag_mask  = 0x%08x", cp->name, cp->tag_mask);
   ^
In file included from cache.c:104:0:
misc.h:227:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _debug(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:398:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:412:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c: In function ‘cache_char2policy’:
cache.c:459:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   default: fatal("bogus replacement policy, `%c'", c);
   ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c: In function ‘cache_access’:
cache.c:573:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cache: access error: bad size or alignment, addr 0x%08x", addr);
     ^
In file included from cache.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
cache.c:580:5: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
     warnonce("cache: access error: access spans block, addr 0x%08x", addr);
     ^
In file included from cache.c:104:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
cache.c:640:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus replacement policy");
     ^
In file included from cache.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cheetah.c: In function ‘sim_check_options’:
sim-cheetah.c:244:7: warning: passing argument 2 of ‘_warn’ discards ‘const’ qualifier from pointer target type [enabled by default]
       warn("sim-cheetah can only process %d instructions",
       ^
In file included from sim-cheetah.c:104:0:
misc.h:198:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _warn(char *file, char *func, int line, char *fmt, ...);
 ^
sim-cheetah.c:258:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("bad reference stream specifier, use {inst|data|unified}");
     ^
In file included from sim-cheetah.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cheetah.c: In function ‘sim_main’:
sim-cheetah.c:598:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("could not locate CISC flow");
   ^
In file included from sim-cheetah.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cheetah.c:613:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("bogus opcode detected @ 0x%08p", regs.regs_PC);
  ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cheetah.c:615:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("CISC opcode decoded");
  ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-cheetah.c:637:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cheetah.c:639:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("attempted to execute a bogus opcode");
    ^
In file included from sim-cheetah.c:104:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-cheetah.c:643:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
  ^
In file included from sim-cheetah.c:104:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
/bin/sh: line 1: ./sysprobe: No such file or directory
saclru.c: In function ‘init_saclru’:
saclru.c:144:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from saclru.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
saclru.c:151:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("out of virtual memory");
  ^
In file included from saclru.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
saclru.c:156:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from saclru.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
saclru.c:160:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from saclru.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
saclru.c:214:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from saclru.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
util.c: In function ‘idim2’:
util.c:64:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from util.c:21:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
util.c:68:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from util.c:21:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sacopt.c: In function ‘unk_hash_add_sa’:
sacopt.c:150:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from sacopt.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sacopt.c: In function ‘init_sacopt’:
sacopt.c:506:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sacopt.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sacopt.c:510:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sacopt.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sacopt.c:514:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sacopt.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sacopt.c:520:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sacopt.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sacopt.c:524:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sacopt.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
ppopt.c: In function ‘ft_hash’:
ppopt.c:115:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("out of virtual memory");
   ^
In file included from ppopt.c:8:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
faclru.c: In function ‘delete_node’:
faclru.c:129:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from faclru.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
faclru.c: In function ‘hash_lookup_add’:
faclru.c:220:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from faclru.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
faclru.c: In function ‘init_faclru’:
faclru.c:408:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from faclru.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
faclru.c:412:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from faclru.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
faclru.c:422:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from faclru.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
faclru.c: In function ‘ptc’:
faclru.c:475:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from faclru.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c: In function ‘unk_hash_add_fa’:
facopt.c:156:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c: In function ‘process_groups’:
facopt.c:882:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("out of virtual memory");
       ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c:998:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("out of virtual memory");
   ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c: In function ‘stack_proc_fa’:
facopt.c:1031:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("out of virtual memory");
   ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c:1044:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("out of virtual memory");
   ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c:1062:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("out of virtual memory");
   ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c: In function ‘init_facopt’:
facopt.c:1151:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
facopt.c:1155:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from facopt.c:22:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
dmvl.c: In function ‘init_dmvl’:
dmvl.c:243:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from dmvl.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
dmvl.c:247:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from dmvl.c:23:0:
../misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c: In function ‘sim_check_options’:
sim-bpred.c:230:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad bimod predictor config (<table_size>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:232:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad btb config (<num_sets> <associativity>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:250:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad 2-level pred config (<l1size> <l2size> <hist_size> <xor>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:252:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad btb config (<num_sets> <associativity>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:269:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad 2-level pred config (<l1size> <l2size> <hist_size> <xor>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:271:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad bimod predictor config (<table_size>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:273:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad combining predictor config (<meta_table_size>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:275:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad btb config (<num_sets> <associativity>)");
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:289:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot parse predictor type `%s'", pred_type);
     ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c: In function ‘sim_main’:
sim-bpred.c:572:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("could not locate CISC flow");
   ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:587:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("bogus opcode detected @ 0x%08p", regs.regs_PC);
  ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:589:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("CISC opcode decoded");
  ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1928:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1936:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_R,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1949:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1958:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:1974:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_SH(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_O_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:1982:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_O,   0x04,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:1995:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2004:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OL,  0x05,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2020:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_RU,  0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2041:20: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)READ_HALF(GPR_EX(RN), _fault);  \
                    ^
host.h:96:21: note: in expansion of macro ‘LDRH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2050:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_RUL,  0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2066:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_OU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2074:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_OU,  0x0c,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2087:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2096:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_OUL,  0x0d,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2118:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2127:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RL,  0x01,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2146:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2155:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OL,  0x05,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2174:38: note: in expansion of macro ‘READ_BYTE’
  _result = (word_t)(sword_t)(sbyte_t)READ_BYTE(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSB_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2183:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_RUL,  0x09,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2202:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2211:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_OUL,  0x0d,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2233:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2242:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RL,  0x01,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2261:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2270:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OL,  0x05,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2289:38: note: in expansion of macro ‘READ_HALF’
  _result = (word_t)(sword_t)(shalf_t)READ_HALF(GPR_EX(RN), _fault);\
                                      ^
host.h:96:21: note: in expansion of macro ‘LDRSH_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2298:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_RUL,  0x09,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2317:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_OUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2326:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_OUL,  0x0d,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2346:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2351:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PR,  0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2363:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2370:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2383:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRW,  0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2404:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2412:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRWL,  0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2423:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) - HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PO_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2428:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PO,  0x04,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2440:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2447:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POL,  0x05,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2460:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POW,  0x06,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2481:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2489:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POWL,  0x07,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2502:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2507:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRU,  0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2519:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2526:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUL,  0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2539:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_PRUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2546:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_PRUW,  0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2560:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2568:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_PRUWL,  0x0b,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2579:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(RN) + HOFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POU,  0x0c,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2596:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2603:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUL,  0x0d,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:2616:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STRH_POUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2623:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STRH_POUW,  0x0e,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2637:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2645:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRH_POUWL,  0x0f,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2662:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2669:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRL,  0x01,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2685:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2693:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRWL,  0x03,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2707:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2714:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POL,  0x05,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2730:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2738:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POWL,  0x07,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2752:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2759:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUL,  0x09,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2775:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2783:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_PRUWL,  0x0b,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2797:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2804:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUL,  0x0d,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:2820:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSB_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2828:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSB_POUWL,  0x0f,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2845:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2852:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRL,  0x01,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2868:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2876:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRWL,  0x03,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2890:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) - HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2897:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POL,  0x05,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2913:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2921:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POWL,  0x07,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2935:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + GPR(RM), _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2942:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUL,  0x09,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2958:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_PRUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2966:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_PRUWL,  0x0b,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:2980:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(RN) + HOFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:2987:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUL,  0x0d,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:3003:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDRSH_POUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3011:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDRSH_POUWL,  0x0f,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3026:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3034:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3047:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3056:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_L,   0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3072:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3080:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_B,   0x04,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3093:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_BL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3102:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_BL,   0x05,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3118:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3126:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_U,   0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3139:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3148:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UL,   0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3164:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_UB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3172:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_UB,   0x0c,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3185:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_UBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3194:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_UBL,  0x0d,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3212:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) - OFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STR_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_P,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3229:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3236:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PL,   0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3249:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3256:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PW,   0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3270:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3278:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PWL,  0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3289:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) - OFS, _fault); \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3294:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PB,   0x04,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3306:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(RN) - OFS, _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3313:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBL,  0x05,
 ^
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3326:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STR_PBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3333:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PBW,  0x06,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3347:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDR_PBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3355:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PBWL,  0x07,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3366:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN) + OFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3371:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PU,   0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3383:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3390:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUL,  0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3403:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3410:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUW,  0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3424:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3432:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUWL,  0x0b,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3443:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN) + OFS, _fault); \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3448:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUB,  0x0c,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3460:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(GPR_EX(RN) + OFS, _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3467:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBL,  0x0d,
 ^
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3480:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_PUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3487:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_PUBW,  0x0e,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3501:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_PUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3509:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_PUBWL,  0x0f,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3527:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_R_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3534:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_R,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3550:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3558:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RL,   0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3577:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3584:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RB,   0x04,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3600:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3608:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RBL,  0x05,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3627:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), GPR_EX(RN), _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3634:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RU,   0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3647:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN), _fault);   \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3656:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUL,  0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3675:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(RN), _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3682:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RUB,  0x0c,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3699:27: note: in expansion of macro ‘READ_BYTE’
         _result = (word_t)READ_BYTE(GPR_EX(RN), _fault);  \
                           ^
host.h:96:21: note: in expansion of macro ‘LDR_RUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3708:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RUBL,  0x0d,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3732:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RP_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3737:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RP,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3755:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3762:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3779:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3786:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPW,  0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3804:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3812:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPWL,  0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3829:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3834:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPB,  0x04,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3852:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3859:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBL,  0x05,
 ^
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:3876:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3883:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPBW,  0x06,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:3901:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3909:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPBWL,  0x07,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3926:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3931:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPU,  0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3949:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3956:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUL,  0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:3973:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(GPR_MEM(RD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:3980:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUW,  0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:3998:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4006:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUWL,  0x0b,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4023:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4028:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUB,  0x0c,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4042:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4049:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBL,  0x0d,
 ^
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:4062:9: note: in expansion of macro ‘WRITE_BYTE’
         WRITE_BYTE((byte_t)GPR_MEM(RD), _addr, _fault);   \
         ^
host.h:96:21: note: in expansion of macro ‘STR_RPUBW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4069:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STR_RPUBW,  0x0e,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:4083:19: note: in expansion of macro ‘READ_BYTE’
         _result = READ_BYTE(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDR_RPUBWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4091:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDR_RPUBWL,  0x0f,
 ^
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4113:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4141:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_L_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4150:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_L,   0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4170:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4182:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_W,   0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4204:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4213:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_WL,   0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4265:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_U_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4273:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_U,   0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4293:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4302:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UL,   0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4322:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4334:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_UW,   0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4356:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4365:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_UWL,  0x0b,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4419:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4427:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_P,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4447:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4456:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PL,   0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4476:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4488:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PW,   0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4510:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4519:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PWL,         0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4546:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_MEM(_i), _addr, _fault);   \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4554:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PU,   0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4574:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4583:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUL,         0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:4603:3: note: in expansion of macro ‘WRITE_WORD’
   WRITE_WORD(GPR_BASE(_i), _addr, _fault);  \
   ^
host.h:96:21: note: in expansion of macro ‘STM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4615:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STM_PUW,         0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:4637:13: note: in expansion of macro ‘READ_WORD’
   _result = READ_WORD(_addr & ~3, _fault);  \
             ^
host.h:96:21: note: in expansion of macro ‘LDM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:4646:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDM_PUWL,  0x0b,
 ^
In file included from sim-bpred.c:611:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5942:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5950:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_W,   0x00,
 ^
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:5962:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5970:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_W,   0x01,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:5987:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:5996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_WL,  0x00,
 ^
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6009:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6018:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_WL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6035:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6043:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_W,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6073:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6082:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_WL,  0x00,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6110:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6118:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_UW,  0x00,
 ^
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6130:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6138:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_UW,  0x01,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6154:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6163:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_UWL,  0x00,
 ^
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6176:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6185:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_UWL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6201:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6209:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_UW,  0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6239:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6248:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_UWL,  0x00,
 ^
In file included from sim-bpred.c:611:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:611:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6310:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6315:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_P,   0x00,
 ^
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6326:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6331:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_P,   0x01,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6346:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6353:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PL,  0x00,
 ^
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6365:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6372:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6388:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFS_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6395:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PW,  0x00,
 ^
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6408:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFD_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6415:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PW,  0x01,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6432:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFS_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6440:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PWL,  0x00,
 ^
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6454:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFD_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6462:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PWL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6477:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) - FPOFS, _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6482:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_P,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6511:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(RN) - FPOFS, _fault);  \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6518:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PL,  0x00,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6548:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
  ^
host.h:96:21: note: in expansion of macro ‘STFE_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6555:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PW,  0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6586:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(_addr, _fault);    \
            ^
host.h:96:21: note: in expansion of macro ‘LDFE_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6594:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PWL,  0x00,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6621:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6626:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PU,  0x00,
 ^
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6637:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6642:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PU,  0x01,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6657:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6664:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUL,  0x00,
 ^
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6676:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6683:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6699:9: note: in expansion of macro ‘WRITE_WORD’
         WRITE_WORD(FPR_W(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFS_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6706:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFS_PUW,  0x00,
 ^
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6719:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFD_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6726:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFD_PUW,  0x01,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6743:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFS_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6751:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFS_PUWL,  0x00,
 ^
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6765:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFD_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6773:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFD_PUWL,  0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6787:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), GPR_EX(RN) + FPOFS, _fault);  \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6792:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PU,  0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:6820:19: note: in expansion of macro ‘READ_WORD’
         _result = READ_WORD(GPR_EX(RN) + FPOFS, _fault);  \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6827:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUL,  0x00,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6857:9: note: in expansion of macro ‘WRITE_QWORD’
         WRITE_QWORD(FPR_Q(FD), _addr, _fault);    \
         ^
host.h:96:21: note: in expansion of macro ‘STFE_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6864:1: note: in expansion of macro ‘DEFINST’
 DEFINST(STFE_PUW,  0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6895:19: note: in expansion of macro ‘READ_QWORD’
         _result = READ_QWORD(_addr, _fault);    \
                   ^
host.h:96:21: note: in expansion of macro ‘LDFE_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6903:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LDFE_PUWL,  0x00,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6938:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6946:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_W,   0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:6963:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_WL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6972:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_WL,   0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:6988:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), GPR_EX(RN)+_i*8, _fault); \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_UW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:6996:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_UW,   0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7013:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(GPR_EX(RN)+_i*8, _fault);  \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_UWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7022:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_UWL,  0x0b,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7041:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_P_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7047:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_P,   0x00,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7064:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7071:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PL,   0x01,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7087:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7095:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PW,   0x02,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7112:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7121:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PWL,  0x03,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7137:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PU_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7143:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PU,   0x08,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7160:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7167:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUL,  0x09,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7183:6: note: in expansion of macro ‘WRITE_QWORD’
      WRITE_QWORD(FPR_Q((FD)+_i), _addr+_i*8, _fault);  \
      ^
host.h:96:21: note: in expansion of macro ‘SFM_PUW_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7191:1: note: in expansion of macro ‘DEFINST’
 DEFINST(SFM_PUW,  0x0a,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7208:16: note: in expansion of macro ‘READ_QWORD’
      _result = READ_QWORD(_addr+_i*8, _fault);   \
                ^
host.h:96:21: note: in expansion of macro ‘LFM_PUWL_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:599:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7217:1: note: in expansion of macro ‘DEFINST’
 DEFINST(LFM_PUWL,  0x0b,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:496:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:230:40: note: in expansion of macro ‘MEM_WRITE’
 #define MEM_WRITE_BYTE(MEM, ADDR, VAL) MEM_WRITE(MEM, ADDR, byte_t, VAL)
                                        ^
sim-bpred.c:496:29: note: in expansion of macro ‘MEM_WRITE_BYTE’
   ((FAULT) = md_fault_none, MEM_WRITE_BYTE(mem, addr = (DST), (SRC)))
                             ^
machine.def:7283:2: note: in expansion of macro ‘WRITE_BYTE’
  WRITE_BYTE((byte_t)GPR_MEM(RD), GPR_EX(URN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STP_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7288:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_B,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:7300:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_B_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7306:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_B,
 ^
sim-bpred.c:485:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                                                     ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:218:34: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_BYTE(MEM, ADDR) MEM_READ(MEM, ADDR, byte_t)
                                  ^
sim-bpred.c:485:29: note: in expansion of macro ‘MEM_READ_BYTE’
   ((FAULT) = md_fault_none, MEM_READ_BYTE(mem, addr = (SRC)))
                             ^
machine.def:7318:12: note: in expansion of macro ‘READ_BYTE’
  _result = READ_BYTE(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_SB_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7324:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_SB,
 ^
sim-bpred.c:498:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:233:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, half_t, MD_SWAPH(VAL))
     ^
sim-bpred.c:498:29: note: in expansion of macro ‘MEM_WRITE_HALF’
   ((FAULT) = md_fault_none, MEM_WRITE_HALF(mem, addr = (DST), (SRC)))
                             ^
machine.def:7335:2: note: in expansion of macro ‘WRITE_HALF’
  WRITE_HALF((half_t)GPR_MEM(RD), GPR_EX(URN), _fault);  \
  ^
host.h:96:21: note: in expansion of macro ‘STP_H_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7340:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_H,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:7352:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_H_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7358:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_H,
 ^
sim-bpred.c:487:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                                                     ^
machine.h:312:23: note: in definition of macro ‘MD_SWAPH’
 #define MD_SWAPH(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:220:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_HALF(MEM, ADDR) MD_SWAPH(MEM_READ(MEM, ADDR, half_t))
                                           ^
sim-bpred.c:487:29: note: in expansion of macro ‘MEM_READ_HALF’
   ((FAULT) = md_fault_none, MEM_READ_HALF(mem, addr = (SRC)))
                             ^
machine.def:7370:12: note: in expansion of macro ‘READ_HALF’
  _result = READ_HALF(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_SH_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7376:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_SH,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7387:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(GPR_MEM(RD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7392:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_W,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:7404:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_W_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7410:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_W,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:500:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                                                      ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:237:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, word_t, MD_SWAPW(VAL))
     ^
sim-bpred.c:500:29: note: in expansion of macro ‘MEM_WRITE_WORD’
   ((FAULT) = md_fault_none, MEM_WRITE_WORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7421:2: note: in expansion of macro ‘WRITE_WORD’
  WRITE_WORD(FPR_W(FD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_S_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7426:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_S,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:489:53: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                                                     ^
machine.h:313:23: note: in definition of macro ‘MD_SWAPW’
 #define MD_SWAPW(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:222:43: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_WORD(MEM, ADDR) MD_SWAPW(MEM_READ(MEM, ADDR, word_t))
                                           ^
sim-bpred.c:489:29: note: in expansion of macro ‘MEM_READ_WORD’
   ((FAULT) = md_fault_none, MEM_READ_WORD(mem, addr = (SRC)))
                             ^
machine.def:7438:12: note: in expansion of macro ‘READ_WORD’
  _result = READ_WORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_S_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7444:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_S,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7455:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_D_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7460:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_D,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7472:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_D_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7478:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_D,
 ^
In file included from sim-bpred.c:86:0:
sim-bpred.c:503:55: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                                                       ^
memory.h:157:5: note: in definition of macro ‘MEM_PTAB_TAG’
   ((ADDR) >> (MD_LOG_PAGE_SIZE + MEM_LOG_PTAB_SIZE))
     ^
memory.h:180:5: note: in expansion of macro ‘MEM_PAGE’
   (!MEM_PAGE(MEM, ADDR)       \
     ^
memory.h:209:4: note: in expansion of macro ‘MEM_TICKLE’
   (MEM_TICKLE(MEM, (md_addr_t)(ADDR)),     \
    ^
memory.h:247:5: note: in expansion of macro ‘MEM_WRITE’
     MEM_WRITE(MEM, ADDR, qword_t, MD_SWAPQ(VAL))
     ^
sim-bpred.c:503:29: note: in expansion of macro ‘MEM_WRITE_QWORD’
   ((FAULT) = md_fault_none, MEM_WRITE_QWORD(mem, addr = (DST), (SRC)))
                             ^
machine.def:7489:2: note: in expansion of macro ‘WRITE_QWORD’
  WRITE_QWORD(FPR_Q(FD), GPR_EX(URN), _fault);   \
  ^
host.h:96:21: note: in expansion of macro ‘STP_E_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7494:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(STP_E,
 ^
In file included from sim-bpred.c:84:0:
sim-bpred.c:492:54: warning: operation on ‘addr’ may be undefined [-Wsequence-point]
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                                                      ^
machine.h:314:23: note: in definition of macro ‘MD_SWAPQ’
 #define MD_SWAPQ(X)  (X)
                       ^
memory.h:168:48: note: in expansion of macro ‘MEM_PTAB_TAG’
     && (MEM)->ptab[MEM_PTAB_SET(ADDR)]->tag == MEM_PTAB_TAG(ADDR)) \
                                                ^
memory.h:198:4: note: in expansion of macro ‘MEM_PAGE’
   (MEM_PAGE(MEM, (md_addr_t)(ADDR))     \
    ^
memory.h:226:44: note: in expansion of macro ‘MEM_READ’
 #define MEM_READ_QWORD(MEM, ADDR) MD_SWAPQ(MEM_READ(MEM, ADDR, qword_t))
                                            ^
sim-bpred.c:492:29: note: in expansion of macro ‘MEM_READ_QWORD’
   ((FAULT) = md_fault_none, MEM_READ_QWORD(mem, addr = (SRC)))
                             ^
machine.def:7506:12: note: in expansion of macro ‘READ_QWORD’
  _result = READ_QWORD(GPR_EX(URN), _fault);   \
            ^
host.h:96:21: note: in expansion of macro ‘LDP_E_IMPL’
 #define SYMCAT(X,Y) X##Y
                     ^
sim-bpred.c:603:11: note: in expansion of macro ‘SYMCAT’
           SYMCAT(OP,_IMPL);      \
           ^
machine.def:7512:1: note: in expansion of macro ‘DEFUOP’
 DEFUOP(LDP_E,
 ^
sim-bpred.c:613:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("attempted to execute a bogus opcode");
    ^
In file included from sim-bpred.c:83:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-bpred.c:617:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
  ^
In file included from sim-bpred.c:83:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_create’:
bpred.c:154:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:190:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus predictor class");
     ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:203:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("number of BTB sets must be non-zero and a power of two");
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:205:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("BTB associativity must be non-zero and a power of two");
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:209:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot allocate BTB");
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:228:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("Return-address-stack size must be zero or a power of two");
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:234:4: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
    fatal("cannot allocate return-address-stack");
    ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:246:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus predictor class");
     ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_dir_create’:
bpred.c:266:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:275:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("level-1 size, `%d', must be non-zero and a power of two", 
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:280:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("level-2 size, `%d', must be non-zero and a power of two", 
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:285:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("shift register width, `%d', must be non-zero and positive",
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:292:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot allocate shift register table");
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:296:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot allocate second level table");
  ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:311:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("2bit table size, `%d', must be non-zero and a power of two", 
       ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:316:7: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
       fatal("cannot allocate 2bit storage");
       ^
In file included from bpred.c:131:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:333:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus branch direction predictor class");
     ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_dir_config’:
bpred.c:368:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus branch direction predictor class");
     ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_config’:
bpred.c:409:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("bogus branch predictor class");
     ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_reg_stats’:
bpred.c:450:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus branch predictor class");
       ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_dir_lookup’:
bpred.c:613:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus branch direction predictor class");
       ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c: In function ‘bpred_lookup’:
bpred.c:641:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("no bpred update record");
     ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
bpred.c:704:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus predictor class");
       ^
In file included from bpred.c:131:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:265:12: error: static declaration of ‘bimod_config’ follows non-static declaration
 static int bimod_config[1] =
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:72:12: note: previous declaration of ‘bimod_config’ was here
 extern int bimod_config[];
            ^
sim-outorder.c:270:12: error: static declaration of ‘twolev_config’ follows non-static declaration
 static int twolev_config[4] =
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:90:12: note: previous declaration of ‘twolev_config’ was here
 extern int twolev_config[];
            ^
sim-outorder.c:275:12: error: static declaration of ‘comb_config’ follows non-static declaration
 static int comb_config[1] =
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:93:12: note: previous declaration of ‘comb_config’ was here
 extern int comb_config[];
            ^
sim-outorder.c:279:12: error: static declaration of ‘ras_size’ follows non-static declaration
 static int ras_size = 8;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:96:12: note: previous declaration of ‘ras_size’ was here
 extern int ras_size;
            ^
sim-outorder.c:283:12: error: static declaration of ‘btb_config’ follows non-static declaration
 static int btb_config[2] =
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:99:12: note: previous declaration of ‘btb_config’ was here
 extern int btb_config[];
            ^
sim-outorder.c:287:12: error: static declaration of ‘ruu_decode_width’ follows non-static declaration
 static int ruu_decode_width;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:62:12: note: previous declaration of ‘ruu_decode_width’ was here
 extern int ruu_decode_width;
            ^
sim-outorder.c:290:12: error: static declaration of ‘ruu_issue_width’ follows non-static declaration
 static int ruu_issue_width;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:63:12: note: previous declaration of ‘ruu_issue_width’ was here
 extern int ruu_issue_width;
            ^
sim-outorder.c:299:12: error: static declaration of ‘ruu_commit_width’ follows non-static declaration
 static int ruu_commit_width;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:64:12: note: previous declaration of ‘ruu_commit_width’ was here
 extern int ruu_commit_width;
            ^
sim-outorder.c:302:12: error: static declaration of ‘RUU_size’ follows non-static declaration
 static int RUU_size = 8;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:65:12: note: previous declaration of ‘RUU_size’ was here
 extern int RUU_size;
            ^
sim-outorder.c:305:12: error: static declaration of ‘LSQ_size’ follows non-static declaration
 static int LSQ_size = 4;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:66:12: note: previous declaration of ‘LSQ_size’ was here
 extern int LSQ_size;
            ^
sim-outorder.c:308:14: error: static declaration of ‘cache_dl1_opt’ follows non-static declaration
 static char *cache_dl1_opt;
              ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:82:14: note: previous declaration of ‘cache_dl1_opt’ was here
 extern char *cache_dl1_opt;
              ^
sim-outorder.c:314:14: error: static declaration of ‘cache_dl2_opt’ follows non-static declaration
 static char *cache_dl2_opt;
              ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:83:14: note: previous declaration of ‘cache_dl2_opt’ was here
 extern char *cache_dl2_opt;
              ^
sim-outorder.c:320:14: error: static declaration of ‘cache_il1_opt’ follows non-static declaration
 static char *cache_il1_opt;
              ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:84:14: note: previous declaration of ‘cache_il1_opt’ was here
 extern char *cache_il1_opt;
              ^
sim-outorder.c:326:14: error: static declaration of ‘cache_il2_opt’ follows non-static declaration
 static char *cache_il2_opt;
              ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:85:14: note: previous declaration of ‘cache_il2_opt’ was here
 extern char *cache_il2_opt;
              ^
sim-outorder.c:349:14: error: static declaration of ‘itlb_opt’ follows non-static declaration
 static char *itlb_opt;
              ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:86:14: note: previous declaration of ‘itlb_opt’ was here
 extern char *itlb_opt;
              ^
sim-outorder.c:352:14: error: static declaration of ‘dtlb_opt’ follows non-static declaration
 static char *dtlb_opt;
              ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:87:14: note: previous declaration of ‘dtlb_opt’ was here
 extern char *dtlb_opt;
              ^
sim-outorder.c:358:12: error: static declaration of ‘res_ialu’ follows non-static declaration
 static int res_ialu;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:68:12: note: previous declaration of ‘res_ialu’ was here
 extern int res_ialu;
            ^
sim-outorder.c:364:12: error: static declaration of ‘res_memport’ follows non-static declaration
 static int res_memport;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:70:12: note: previous declaration of ‘res_memport’ was here
 extern int res_memport;
            ^
sim-outorder.c:367:12: error: static declaration of ‘res_fpalu’ follows non-static declaration
 static int res_fpalu;
            ^
In file included from sim-outorder.c:213:0:
sim-outorder.h:69:12: note: previous declaration of ‘res_fpalu’ was here
 extern int res_fpalu;
            ^
sim-outorder.c: In function ‘il1_access_fn’:
sim-outorder.c:708:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("writes to instruction memory not supported");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:716:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("writes to instruction memory not supported");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘il2_access_fn’:
sim-outorder.c:732:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("writes to instruction memory not supported");
     ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘sim_check_options’:
sim-outorder.c:1111:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("bad fast forward count: %d", fastfwd_count);
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1114:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("inst fetch queue size must be positive > 0 and a power of two");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1122:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("front-end speed must be positive and non-zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1144:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad bimod predictor config (<table_size>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1146:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad btb config (<num_sets> <associativity>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1164:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad 2-level pred config (<l1size> <l2size> <hist_size> <xor>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1166:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad btb config (<num_sets> <associativity>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1183:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad 2-level pred config (<l1size> <l2size> <hist_size> <xor>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1185:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad bimod predictor config (<table_size>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1187:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad combining predictor config (<meta_table_size>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1189:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad btb config (<num_sets> <associativity>)");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1203:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("cannot parse predictor type `%s'", pred_type);
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1212:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("bad speculative update stage specifier, use {ID|WB}");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1215:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("issue width must be positive non-zero and a power of two");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1218:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("issue width must be positive non-zero and a power of two");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1221:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("commit width must be positive non-zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1224:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("RUU size must be a positive number > 1 and a power of two");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1227:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("LSQ size must be a positive number > 1 and a power of two");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1236:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 data cache must defined if the l2 cache is defined");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1243:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad l1 D-cache parms: <name>:<nsets>:<bsize>:<assoc>:<repl>");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1255:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("bad l2 D-cache parms: "
      ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1270:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 inst cache must defined if the l2 cache is defined");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1276:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("I-cache l1 cannot access D-cache l1 as it's undefined");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1281:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 inst cache must defined if the l2 cache is defined");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1287:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("I-cache l1 cannot access D-cache l2 as it's undefined");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1292:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("the l1 inst cache must defined if the l2 cache is defined");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1299:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad l1 I-cache parms: <name>:<nsets>:<bsize>:<assoc>:<repl>");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1310:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("I-cache l2 cannot access D-cache l2 as it's undefined");
      ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1317:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("bad l2 I-cache parms: "
      ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1332:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad TLB parms: <name>:<nsets>:<page_size>:<assoc>:<repl>");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1346:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("bad TLB parms: <name>:<nsets>:<page_size>:<assoc>:<repl>");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1354:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("l1 data cache latency must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1357:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("l2 data cache latency must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1360:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("l1 instruction cache latency must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1363:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("l2 instruction cache latency must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1366:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("bad memory access latency (<first_chunk> <inter_chunk>)");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1369:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("all memory access latencies must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1372:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("memory bus width must be positive non-zero and a power of two");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1375:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("TLB miss latency must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1378:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of integer ALU's must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1380:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1384:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of integer multiplier/dividers must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1386:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1390:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of memory system ports must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1392:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of memory system ports must be <= MAX_INSTS_PER_CLASS");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1396:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of floating point ALU's must be greater than zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1398:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of floating point ALU's must be <= MAX_INSTS_PER_CLASS");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1402:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of floating point multiplier/dividers must be > zero");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1404:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘sim_reg_stats’:
sim-outorder.c:1587:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("cannot locate any statistic named `%s'", pcstat_vars[i]);
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1591:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("`-pcstat' statistical variable `%s' is not an integral type",
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:1596:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       pcstat_lastvals[i] = STATVAL(stat);
       ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘sim_load_prog’:
sim-outorder.c:1733:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("bad pipetrace args, use: <fname|stdout|stderr> <range>");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_init’:
sim-outorder.c:1853:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘lsq_init’:
sim-outorder.c:1970:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘rslink_init’:
sim-outorder.c:2090:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("out of virtual memory");
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘eventq_queue_event’:
sim-outorder.c:2168:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("event completed");
     ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2171:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("event occurred in the past");
     ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2049:12: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   { struct RS_link *n_link;      \
            ^
sim-outorder.c:2174:3: note: in expansion of macro ‘RSLINK_NEW’
   RSLINK_NEW(new_ev, rs);
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘readyq_enqueue’:
sim-outorder.c:2303:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("node is already queued");
     ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2049:12: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   { struct RS_link *n_link;      \
            ^
sim-outorder.c:2307:3: note: in expansion of macro ‘RSLINK_NEW’
   RSLINK_NEW(new_node, rs);
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_commit’:
sim-outorder.c:2461:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("RUU out of sync with LSQ");
      ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2483:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("functional unit already in use");
       ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2543:17: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
                 panic ("retired instruction has odeps\n");
                 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2611:3: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   panic ("retired instruction has odeps\n");
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_recover’:
sim-outorder.c:2655:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("empty RUU");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2659:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("RUU head and tail broken");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2667:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("RUU and LSQ out of sync");
      ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_writeback’:
sim-outorder.c:2748:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("inst completed and !ready, !issued, or completed");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2757:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("mis-predicted load or store?!?!?");
      ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:2840:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("output dependence already satisfied");
    ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘lsq_refresh’:
sim-outorder.c:2918:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("STD unknown array overflow, increase MAX_STD_UNKNOWNS");
   ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_issue’:
sim-outorder.c:3002:6: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
      panic("issued inst !ready, issued, or completed");
      ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:3018:3: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   panic("store creates result");
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:3021:3: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   panic("mis-predicted store");
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:3042:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    panic("functional unit already in use");
    ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘tracer_recover’:
sim-outorder.c:3326:5: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
     panic("cannot recover unless in speculative mode");
     ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘spec_mem_access’:
sim-outorder.c:3470:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("out of virtual memory");
      ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:3577:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("access size not supported in mis-speculative mode");
       ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_link_idep’:
sim-outorder.c:2049:12: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   { struct RS_link *n_link;      \
            ^
sim-outorder.c:3685:3: note: in expansion of macro ‘RSLINK_NEW’
   RSLINK_NEW(link, rs); link->x.opnum = idep_num;
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘simoo_reg_obj’:
sim-outorder.c:4159:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus register bank");
       ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: In function ‘ruu_dispatch’:
sim-outorder.c:4244:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus instruction");
       ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:4258:3: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
   panic("drained and speculative");
   ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:4279:3: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
   fatal("could not locate CISC flow");
   ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:4289:7: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
       panic("bogus instruction");
       ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:4366:0:
machine.def:377:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFINST(SWI,   0x0f,
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:4378:2: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
  fatal("non-speculative fault (%d) detected @ 0x%08p",
  ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:4675:4: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
    newval = STATVAL(pcstat_stats[i]);
    ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:4194:7: warning: variable ‘br_taken’ set but not used [-Wunused-but-set-variable]
   int br_taken, br_pred_taken;  /* if br, taken?  predicted taken? */
       ^
sim-outorder.c: In function ‘fetch_init’:
sim-outorder.c:4722:5: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
     fatal("out of virtual memory");
     ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def: In function ‘sim_main’:
machine.def:315:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0_LINK, 0x00, "alureg0_link", 4, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:317:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1_LINK, 0x01, "alureg1_link", 4, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:319:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM0_LINK, 0x02, "aluimm0_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:321:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUIMM1_LINK, 0x03, "aluimm1_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:323:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPOST_LINK, 0x04, "memimmpost_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:325:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMIMMPRE_LINK, 0x05, "memimmpre_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:327:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPOST_LINK, 0x06, "memregpost_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:329:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MEMREGPRE_LINK, 0x07, "memregpre_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:331:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPOST_LINK, 0x08, "blkpost_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:333:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(BLKPRE_LINK, 0x09, "blkpre_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPOST_LINK, 0x0c, "cdxpost_link", 8, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:366:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDXPRE_LINK, 0x0d, "cdxpre_link", 8, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:368:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPROC_LINK, 0x0e, "cproc_link", 8, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:377:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFINST(SWI,   0x0f,
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:385:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG0a_LINK, 0x0f00, "alureg0a_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:388:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUL_LINK, 0x09, "mul_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:390:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRHSTRH_LINK, 0x0b, "ldrhstrh_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:392:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSBSTRSB_LINK, 0x0d, "ldrsbstrsb_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:394:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSHSTRSH_LINK, 0x0f, "ldrshstrsh_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:399:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ALUREG1a_LINK, 0x0f00, "alureg1a_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:404:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRH_PSTRH_P_LINK, 0x0b, "ldrh_pstrh_p_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:406:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSB_PSTRSB_P_LINK, 0x0d, "ldrsb_pstrsb_p_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:408:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDRSH_PSTRSH_P_LINK, 0x0f, "ldrsh_pstrsh_p_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SWPMRS_LINK, 0x00, "swpmrs_link", 4, 0xff)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:692:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTEQ_LINK, 0x02, "msrteq_link", 12, 0x7f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:710:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MRSSWP_LINK, 0x04, "mrsswp_link", 4, 0xff)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRTST_LINK, 0x06, "msrtst_link", 12, 0x7f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:1314:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITEQI_LINK, 0x02, "msriteqi_link", 12, 0x7f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:1364:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MSRITSTI_LINK, 0x06, "msritsti_link", 12, 0x7f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4662:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FPA_LINK, 0x01, "fpa_link", 4, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4667:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPDO_LINK, 0x00, "cpdo_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4669:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRTCMF_LINK, 0x01, "cprtcmf_link", 12, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4674:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_CDP_LINK, 0x0e00, "cprt_cdp_link", 4, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4676:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMF_LINK, 0x0f, "cmf_link", 21, 0x07)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4683:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFMVF_LINK, 0x00, "adfmvf_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4685:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMNF_LINK, 0x01, "mufmnf_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4687:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFABS_LINK, 0x02, "sufabs_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4689:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRND_LINK, 0x03, "rsfrnd_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4691:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFSQT_LINK, 0x04, "dvfsqt_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4693:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFLOG_LINK, 0x05, "rdflog_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4695:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWLGN_LINK, 0x06, "powlgn_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4697:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWEXP_LINK, 0x07, "rpwexp_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4699:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFSIN_LINK, 0x08, "rmfsin_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4701:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLCOS_LINK, 0x09, "fmlcos_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4703:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVTAN_LINK, 0x0a, "fdvtan_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4705:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDASN_LINK, 0x0b, "frdasn_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4707:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLACS_LINK, 0x0c, "polacs_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4709:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDATN_LINK, 0x0d, "undatn_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4711:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDURD_LINK, 0x0e, "undurd_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4713:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(UNDNRM_LINK, 0x0f, "undnrm_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4718:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ADFADFI_LINK, 0x00, "adfadfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4720:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MVFMVFI_LINK, 0x01, "mvfmvfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4725:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MUFMUFI_LINK, 0x00, "mufmufi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4727:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(MNFMNFI_LINK, 0x01, "mnfmnfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4732:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SUFSUFI_LINK, 0x00, "sufsufi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4734:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ABSABSI_LINK, 0x01, "absabsi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4739:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RSFRSFI_LINK, 0x00, "rsfrsfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4741:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RNDRNDI_LINK, 0x01, "rndrndi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4746:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(DVFDVFI_LINK, 0x00, "dvfdvfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4748:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SQTSQTI_LINK, 0x01, "sqtsqti_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4753:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RDFRDFI_LINK, 0x00, "rdfrdfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4755:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LOGLOGI_LINK, 0x01, "loglogi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4760:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POWPOWI_LINK, 0x00, "powpowi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4762:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LGNLGNI_LINK, 0x01, "lgnlgni_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4767:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RPWRPWI_LINK, 0x00, "rpwrpwi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4769:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(EXPEXPI_LINK, 0x01, "expexpi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4774:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(RMFRMFI_LINK, 0x00, "rmfrmfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4776:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(SINSINI_LINK, 0x01, "sinsini_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4781:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FMLFMLI_LINK, 0x00, "fmlfmli_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4783:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(COSCOSI_LINK, 0x01, "coscosi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4788:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FDVFDVI_LINK, 0x00, "fdvfdvi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4790:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(TANTANI_LINK, 0x01, "tantani_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4795:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(FRDFRDI_LINK, 0x00, "frdfrdi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4797:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ASNASNI_LINK, 0x01, "asnasni_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4802:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(POLPOLI_LINK, 0x00, "polpoli_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4804:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ACSACSI_LINK, 0x01, "acsacsi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4809:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(ATNATNI_LINK, 0x01, "atnatni_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4814:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(URDURDI_LINK, 0x01, "urdurdi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:4819:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(NRMNRMI_LINK, 0x01, "nrmnrmi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5615:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CDP_LINK, 0x00, "cdp_link", 4, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5617:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CPRT_LINK, 0x01, "cprt_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5715:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFCMFI_LINK, 0x04, "cmfcmfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5717:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFCNFI_LINK, 0x05, "cnfcnfi_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5719:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CMFECMFEI_LINK, 0x06, "cmfecmfei_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5721:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(CNFECNFEI_LINK, 0x07, "cnfecnfei_link", 3, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5894:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPOST_LINK, 0x01, "ldfstfpost_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5896:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPOST_LINK, 0x02, "lfmsfmpost_link", 20, 0x0b)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5901:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFSTFPRE_LINK, 0x01, "ldfstfpre_link", 20, 0x0f)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5903:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LFMSFMPRE_LINK, 0x02, "lfmsfmpre_link", 20, 0x0b)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5912:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_WSTFD_W_LINK, 0x02, "stfs_wstfd_w_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5914:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_WLLDFD_WL_LINK, 0x03, "ldfs_wlldfd_wl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5916:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_WSTFP_W_LINK, 0x06, "stfe_wstfp_w_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5918:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_WLLDFP_WL_LINK, 0x07, "ldfe_wlldfp_wl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5924:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_UWSTFD_UW_LINK, 0x0a, "stfs_uwstfd_uw_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5926:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_UWLLDFD_UWL_LINK, 0x0b, "ldfs_uwlldfd_uwl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5928:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_UWSTFP_UW_LINK, 0x0e, "stfe_uwstfp_uw_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:5930:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_UWLLDFP_UWL_LINK, 0x0f, "ldfe_uwlldfp_uwl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6269:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PSTFD_P_LINK, 0x00, "stfs_pstfd_p_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6271:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PLLDFD_PL_LINK, 0x01, "ldfs_plldfd_pl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6273:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PWSTFD_PW_LINK, 0x02, "stfs_pwstfd_pw_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6275:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PWLLDFD_PWL_LINK, 0x03, "ldfs_pwlldfd_pwl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6277:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PSTFP_P_LINK, 0x04, "stfe_pstfp_p_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6279:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PLLDFP_PL_LINK, 0x05, "ldfe_plldfp_pl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6281:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PWSTFP_PW_LINK, 0x06, "stfe_pwstfp_pw_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6283:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PWLLDFP_PWL_LINK, 0x07, "ldfe_pwlldfp_pwl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6285:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUSTFD_PU_LINK, 0x08, "stfs_pustfd_pu_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6287:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PULLDFD_PUL_LINK, 0x09, "ldfs_pulldfd_pul_link",15,0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6289:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFS_PUWSTFD_PUW_LINK, 0x0a, "stfs_puwstfd_puw_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6291:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFS_PUWLLDFD_PUWL_LINK, 0x0b, "ldfs_puwlldfd_puwl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6293:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUSTFP_PU_LINK, 0x0c, "stfe_pustfp_pu_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6295:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PULLDFP_PUL_LINK, 0x0d, "ldfe_pulldfp_pul_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6297:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(STFE_PUWSTFP_PUW_LINK, 0x0e, "stfe_puwstfp_puw_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
In file included from sim-outorder.c:5186:0:
machine.def:6299:1: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
 DEFLINK(LDFE_PUWLLDFP_PUWL_LINK, 0x0f, "ldfe_puwlldfp_puwl_link", 15, 0x01)
 ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:5188:8: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
        panic("attempted to execute a bogus opcode");
        ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:5192:6: warning: passing argument 2 of ‘_fatal’ discards ‘const’ qualifier from pointer target type [enabled by default]
      fatal("fault (%d) detected @ 0x%08p", fault, regs.regs_PC);
      ^
In file included from sim-outorder.c:197:0:
misc.h:157:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _fatal(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:5129:17: warning: variable ‘target_PC’ set but not used [-Wunused-but-set-variable]
       md_addr_t target_PC;  /* actual next/target PC address */
                 ^
sim-outorder.c:5250:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("RUU_head/RUU_tail wedged");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c:5252:2: warning: passing argument 2 of ‘_panic’ discards ‘const’ qualifier from pointer target type [enabled by default]
  panic("LSQ_head/LSQ_tail wedged");
  ^
In file included from sim-outorder.c:197:0:
misc.h:170:1: note: expected ‘char *’ but argument is of type ‘const char *’
 _panic(char *file, char *func, int line, char *fmt, ...)
 ^
sim-outorder.c: At top level:
sim-outorder.c:2032:23: warning: ‘RSLINK_NULL’ defined but not used [-Wunused-variable]
 static struct RS_link RSLINK_NULL = RSLINK_NULL_DATA;
                       ^
make: *** [sim-outorder.o] Error 1
